// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoodForFood.Data;

namespace MoodForFood.Migrations
{
    [DbContext(typeof(MoodForFoodContext))]
    [Migration("20210609143010_firstInit")]
    partial class firstInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoodForFood.Models.Food", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Evening")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodForTheMood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MoodID")
                        .HasColumnType("int");

                    b.Property<string>("Morning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Noon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MoodID");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("MoodForFood.Models.Mood", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Curiosity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalMood")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Mood");
                });

            modelBuilder.Entity("MoodForFood.Models.PersonalMood", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoodReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PersonalMood");
                });

            modelBuilder.Entity("MoodForFood.Models.Quote", b =>
                {
                    b.Property<Guid>("QuoteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<string>("QuoteText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Writer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuoteID");

                    b.HasIndex("MoodId");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("MoodForFood.Models.Food", b =>
                {
                    b.HasOne("MoodForFood.Models.Mood", "Mood")
                        .WithMany()
                        .HasForeignKey("MoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MoodForFood.Models.Quote", b =>
                {
                    b.HasOne("MoodForFood.Models.Mood", "Mood")
                        .WithMany()
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");
                });
#pragma warning restore 612, 618
        }
    }
}
