{"version":3,"sources":["./src/app/statistics/statistics.component.css","./src/app/footer/footer.component.css","./src/app/statistics/statistics.component.ts","./src/app/personal-mood/personal-mood.service.ts","./src/app/personal-mood/personal-mood-read.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/personal-mood/personal-mood.component.html","./src/app/home/home.component.html","./src/app/home/menu-list.component.ts","./src/app/mood/mood.service.ts","./src/app/statistics/statistics.service.ts","./src/app/footer/footer.component.html","./src/app/statistics/statistics-add.component.ts","./src/app/home/menu-list.component.html","./src/app/mood/mood.component.ts","./src/app/home/home.service.ts","./src/app/nav-menu/nav-menu.component.ts","./src/app/app.component.ts","./src/app/personal-mood/personal-mood.component.css","./src/app/app.component.html","./src/app/home/home-add-menu.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/app.module.ts","./src/app/personal-mood/personal-mood-edit.component.html","./src/app/nav-menu/nav-menu.component.css","./src/app/footer/footer.component.ts","./src/app/personal-mood/personal-mood-add.component.html","./src/app/personal-mood/personal-mood-add.component.ts","./src/app/statistics/statistics-add.component.html","./src/app/home/home-add-menu.component.ts","./src/app/mood/mood.component.html","./src/app/personal-mood/personal-mood.component.ts","./src/app/personal-mood/personal-mood-edit.component.ts","./src/app/statistics/statistics.component.html","./src/app/personal-mood/personal-mood-read.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \".mat-stepper-vertical {\\r\\n  margin-top: 8px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  margin-top: 16px;\\r\\n}\\r\\n\\r\\n.example-container .mat-form-field + .mat-form-field {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n.example-right-align {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\ninput.example-right-align::-webkit-outer-spin-button,\\r\\ninput.example-right-align::-webkit-inner-spin-button {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\ninput.example-right-align {\\r\\n  -moz-appearance: textfield;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpc3RpY3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7O0VBRUUsYUFBYTtBQUNmOztBQUVBO0VBQ0UsMEJBQTBCO0FBQzVCIiwiZmlsZSI6InN0YXRpc3RpY3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtc3RlcHBlci12ZXJ0aWNhbCB7XHJcbiAgbWFyZ2luLXRvcDogOHB4O1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gIG1hcmdpbi10b3A6IDE2cHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciAubWF0LWZvcm0tZmllbGQgKyAubWF0LWZvcm0tZmllbGQge1xyXG4gIG1hcmdpbi1sZWZ0OiA4cHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLXJpZ2h0LWFsaWduIHtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuaW5wdXQuZXhhbXBsZS1yaWdodC1hbGlnbjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcclxuaW5wdXQuZXhhbXBsZS1yaWdodC1hbGlnbjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuaW5wdXQuZXhhbXBsZS1yaWdodC1hbGlnbiB7XHJcbiAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XHJcbn1cclxuIl19 */\";","export default \".box-shadow {\\r\\n  box-shadow: .25rem 0 .25rem .15rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscURBQXFEO0FBQ3ZEIiwiZmlsZSI6ImZvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJveC1zaGFkb3cge1xyXG4gIGJveC1zaGFkb3c6IC4yNXJlbSAwIC4yNXJlbSAuMTVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcblxyXG4iXX0= */\";","import { Component } from '@angular/core';\r\nimport { Statistics } from './statistics.model';\r\nimport { StatisticsService } from './statistics.service';\r\n\r\n@Component({\r\n  selector: 'app-statistics.component',\r\n  templateUrl: './statistics.component.html'\r\n})\r\nexport class StatisticsComponent {\r\n\r\n/*public statistics: Statistics = <Statistics>{};*/\r\n  public statistics: Statistics[];\r\n\r\n\r\n  constructor(private statisticsService: StatisticsService) {\r\n    this.statisticsService.loadStatistics().subscribe(result => {\r\n      this.statistics = result;\r\n    }, error => console.error(error));\r\n  }\r\n \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Mood } from '../mood/mood.model';\r\nimport { PersonalMood } from './personal-mood.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonalMoodService {\r\n\r\n  constructor(private http1: HttpClient, private http2: HttpClient, @Inject('BASE_URL') private baseUrl: string)\r\n  { }\r\n\r\n  public loadPersonalMood() {\r\n    return this.http1.get<PersonalMood[]>(this.baseUrl + 'api/personalmoods');\r\n  }\r\n\r\n  public loadPersonalMoodByID(id: string) {\r\n    return this.http1.get<PersonalMood>(this.baseUrl + 'api/personalmoods/' + id);\r\n  }\r\n\r\n  public saveAddPersonalMood(personalMood: PersonalMood) {\r\n    return this.http1.post(this.baseUrl + 'api/personalmoods', personalMood);\r\n  }\r\n\r\n  public saveEditedPersonalMood(id: string, personalMood: PersonalMood) {\r\n    return this.http1.put<PersonalMood>(this.baseUrl + 'api/personalmoods/' + id, personalMood);\r\n  }\r\n\r\n  public deletePersonalMood(personalMood: PersonalMood) {\r\n    var ans = confirm(\"Do you want to delete your personal moods: \" + personalMood.moodName);\r\n    if (ans) {\r\n      return this.http1.delete(this.baseUrl + 'api/personalmoods/' + personalMood.id);\r\n    }\r\n  }\r\n\r\n  public loadMood() {\r\n    return this.http2.get<Mood[]>(this.baseUrl + 'api/moods');\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n<div class=\\\"my-container-card\\\" style=\\\"padding-bottom:17px\\\">\\r\\n  <mat-card class=\\\"example-card\\\" style=\\\"width:100%\\\">\\r\\n\\r\\n    <h1 style=\\\"color: red; margin-left: 28%\\\">Read Mood</h1>\\r\\n\\r\\n    <div style=\\\"padding:7%\\\">\\r\\n\\r\\n      <mat-divider></mat-divider>\\r\\n      <mat-card-header style=\\\"margin-left:20%\\\">\\r\\n        <mat-card-title>Mood Name:</mat-card-title>\\r\\n        <mat-card-subtitle>{{ personalMood.moodName }}</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-divider></mat-divider>\\r\\n\\r\\n      <mat-card-header style=\\\"margin-left:20%\\\">\\r\\n        <mat-card-title>Date:</mat-card-title>\\r\\n        <mat-card-subtitle>{{ personalMood.currentDate }}</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-divider></mat-divider>\\r\\n\\r\\n      <mat-card-header style=\\\"margin-left:20%\\\">\\r\\n        <mat-card-title>Mood Reason:</mat-card-title>\\r\\n        <mat-card-subtitle>{{ personalMood.moodReason}}</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-divider></mat-divider>\\r\\n\\r\\n      <mat-card-content style=\\\"margin-left:25%; margin-top:10%; margin-bottom: -10px\\\">\\r\\n        <button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/personal-mood']\\\">Back to list</button>\\r\\n      </mat-card-content>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\";","import { Component } from '@angular/core';\r\nimport { Mood } from '../mood/mood.model';\r\nimport { PersonalMood } from '../personal-mood/personal-mood.model';\r\nimport { Food, HeroBanner } from './home.model';\r\nimport { HomeService } from './home.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n  public personalMoods: PersonalMood[];\r\n  public moods: Mood[];\r\n  public foods: Food[];\r\n  public listOfFoodID: string[] = [];\r\n\r\n  public personalMood: PersonalMood = <PersonalMood>{};\r\n  public mood: Mood = <Mood>{};\r\n  public food: Food = <Food>{};\r\n\r\n  public viewTable: boolean = false;\r\n  public viewHoleHomePage: boolean = false;\r\n  public selectedID: number;\r\n  public selectedName: string;\r\n\r\n  public hasMapFoods: Map<number, string> = new Map<number, string>();\r\n  public randomFoodID: string;\r\n  /*public listOfFoodID: string[];*/\r\n\r\n  public heroBanners: HeroBanner[] = [\r\n    { message: 'Choose you mood for today', pictureUrl: 'https://png.pngtree.com/thumb_back/fh260/20170803/pngtree-Food-Menu-Fare-Meal-background-photo-869492.jpg' },\r\n    { message: 'Save you mood for today', pictureUrl: 'https://i.pinimg.com/originals/78/6e/22/786e226cd11511d3369aa3ffa9280594.png' },\r\n    { message: 'Ready to cook ?', pictureUrl: 'https://png.pngtree.com/thumb_back/fh260/back_pic/03/53/33/45579720d58a73c.jpg' },\r\n    { message: 'Learn about your moods', pictureUrl: 'https://t3.ftcdn.net/jpg/02/54/20/88/360_F_254208823_NXcV5RCcWJ1vgSuWjhPqIpPmqXIyBrDO.jpg' },\r\n    { message: 'We will give you useful suggestions ', pictureUrl: 'https://t4.ftcdn.net/jpg/02/44/69/87/360_F_244698725_uWdUNY1oiaHthwcb1NK6IqtPuRNKHor2.jpg' },\r\n  ];\r\n\r\n\r\n  constructor(private homeService: HomeService) {\r\n    this.loads();\r\n  }\r\n\r\n  public loads() {\r\n    this.homeService.loadFood().subscribe(result => {\r\n      this.foods = result;\r\n    }, error => console.error(error));\r\n\r\n    this.homeService.loadMood().subscribe(result => {\r\n      this.moods = result;\r\n    }, error => console.error(error));\r\n\r\n    this.homeService.loadPersonalMood().subscribe(result => {\r\n      this.personalMoods = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public saveSelectedMoodID(selected) {\r\n    this.selectedID = selected;\r\n    this.viewTable = true;\r\n    this.food.moodID = selected;\r\n    this.foods.push(this.food);\r\n\r\n    return this.selectedID;\r\n  }\r\n\r\n  public generateRandomMenu() {\r\n    this.listOfFoodID = [];\r\n    let nullElements = 0;\r\n\r\n    for (let i = 0; i < this.foods.length; i++) {\r\n      if (this.foods[i].moodID == this.selectedID) {\r\n        if (this.foods[i].id != null) {\r\n          this.listOfFoodID.push(this.foods[i].id);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.listOfFoodID.length; i++) {\r\n      if (this.listOfFoodID[i] != null) {\r\n        this.hasMapFoods.set(i, this.listOfFoodID[i]);\r\n      } else {\r\n        nullElements = 0;\r\n        nullElements++;\r\n      }\r\n    }\r\n\r\n    let indexForMap = 0;\r\n    if (this.hasMapFoods.size == 1) {\r\n      indexForMap = 0;\r\n    } else {\r\n      indexForMap = Math.floor((Math.random() * (this.hasMapFoods.size - nullElements)));\r\n    }\r\n    \r\n    this.randomFoodID = this.hasMapFoods.get(indexForMap);\r\n    return this.randomFoodID;\r\n  }\r\n\r\n  public completeCriteriaForRandomMenu(selected) {\r\n    this.saveSelectedMoodID(selected);\r\n    this.generateRandomMenu();\r\n  }\r\n\r\n  public saveSelectedMoodName(selected) {\r\n    this.selectedName = selected;\r\n    this.personalMood.moodName = selected;\r\n    this.personalMoods.push(this.personalMood);\r\n    return this.selectedName;\r\n  }\r\n\r\n  public viewHoleHomePageStatus() {\r\n    this.viewHoleHomePage = true;\r\n    return this.viewHoleHomePage;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export default \"\\r\\n<div class=\\\"example-button-row\\\">\\r\\n  <button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/personal-mood-add']\\\">Add extra mood for today</button>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"padding-bottom:17px\\\">\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"personalMoods\\\" class=\\\"mat-elevation-z8\\\">\\r\\n    <ng-container matColumnDef=\\\"moodName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:25%\\\">Mood Name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let personalMood\\\"> {{ personalMood.moodName }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"currentDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:25%\\\">Date</th>\\r\\n      <td mat-cell *matCellDef=\\\"let personalMood\\\"> {{ personalMood.currentDate }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"moodReason\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:35%\\\">Mood Reason</th>\\r\\n      <td mat-cell *matCellDef=\\\"let personalMood\\\"> {{ personalMood.moodReason }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:15%\\\">Actions</th>\\r\\n      <td mat-cell *matCellDef=\\\"let personalMood\\\">\\r\\n        <section>\\r\\n          <div class=\\\"example-button-row\\\">\\r\\n            <button mat-icon-button color=\\\"accent\\\" aria-label=\\\"Example icon button with a home icon\\\" matTooltip=\\\"Edit\\\">\\r\\n              <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" [routerLink]=\\\"['/personal-mood-edit',personalMood.id]\\\" style=\\\"cursor:pointer\\\">edit</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button color=\\\"accent\\\" aria-label=\\\"Example icon button with a home icon\\\" matTooltip=\\\"Info\\\">\\r\\n              <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" [routerLink]=\\\"['/personal-mood-read',personalMood.id]\\\" style=\\\"cursor:pointer\\\">info</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button style=\\\"color:red\\\" aria-label=\\\"Example icon button with a home icon\\\" matTooltip=\\\"Delete\\\">\\r\\n              <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" (click)=\\\"deletePersonalMood(personalMood)\\\" style=\\\"cursor:pointer\\\">delete</mat-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n        </section>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay \\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let myRowData; columns: columnsToDisplay ;\\\"></tr>\\r\\n  </table>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<!--<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"moods\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>ID</th>\\r\\n      <th>PersonalMood</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let mood of moods\\\">\\r\\n      <td>{{ mood.id }}</td>\\r\\n      <td>{{ mood.personalMood }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>-->\\r\\n\";","export default \"\\r\\n<div *ngIf=\\\"viewHoleHomePage == false\\\">\\r\\n  <mat-card class=\\\"example-card\\\" style=\\\"margin: 7%; background-color:#69F0AE\\\">\\r\\n    <mat-card class=\\\"example-card\\\" style=\\\"margin: 3%; padding:7%\\\">\\r\\n      <div style=\\\"text-align:center; margin-bottom:5%\\\">\\r\\n        <div style=\\\"font-size: 2em\\\">Your opinion is really important for us !</div>\\r\\n        <div style=\\\"font-size: 1.5em\\\">Please take 2 minutes to complete a short form</div>\\r\\n      </div>\\r\\n      <div class=\\\"d-flex justify-content-around\\\">\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\"  (click)=\\\"viewHoleHomePageStatus()\\\" [routerLink]=\\\"['/statistics-add']\\\">Complete it now</button>\\r\\n        </div>\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n          <button mat-raised-button style=\\\"background-color:red\\\" (click)=\\\"viewHoleHomePageStatus()\\\">Latter</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"viewHoleHomePage == true\\\">\\r\\n\\r\\n  <mat-card class=\\\"example-card\\\" >\\r\\n      <mdb-carousel class=\\\"carousel slide carousel-fade\\\" [animation]=\\\"'fade'\\\">\\r\\n        <mdb-carousel-item *ngFor=\\\"let heroBanner of heroBanners\\\">\\r\\n          <div class=\\\"view w-100\\\" style=\\\"max-height:400px\\\">\\r\\n            <img class=\\\"d-block w-100\\\" src=\\\"{{ heroBanner.pictureUrl }}\\\" style=\\\"opacity:80%\\\">\\r\\n            <div class=\\\"mask rgba-black-light waves-light\\\" mdbWavesEffect></div>\\r\\n          </div>\\r\\n          <div class=\\\"carousel-caption\\\" style=\\\"height:65%\\\">\\r\\n            <h1 class=\\\"h1-responsive\\\" style=\\\"\\\">Hey, dear !  How are you today?</h1>\\r\\n            <p>{{ heroBanner.message }}</p>\\r\\n          </div>\\r\\n        </mdb-carousel-item>\\r\\n      </mdb-carousel>\\r\\n  </mat-card>\\r\\n\\r\\n    <div class=\\\"content\\\" style=\\\"padding-bottom: 25px; padding-top:25px\\\">\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <div class=\\\"col-lg-3\\\">\\r\\n            <mat-card class=\\\"example-card\\\" style=\\\"display:flex; justify-content:center\\\">\\r\\n              <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n                <mat-label>Select your mood</mat-label>\\r\\n                <mat-select disableRipple [(value)]=\\\"mood.id\\\">\\r\\n                  <mat-option *ngFor=\\\"let mood of moods\\\" [value]=\\\"mood.id\\\">{{ mood.personalMood }}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-lg-2\\\">\\r\\n            <div>\\r\\n              <div *ngFor=\\\"let mo of moods\\\">\\r\\n                <div *ngIf=\\\"mo.id == mood.id\\\">\\r\\n                  <button style=\\\"margin:5% 5%\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"completeCriteriaForRandomMenu(mood.id)\\\" matTooltip=\\\"what to eat?\\\" matTooltipPosition=\\\"above\\\">\\r\\n                    What to <span style=\\\"font-size:100%\\\" class=\\\"material-icons\\\">restaurant</span> ?\\r\\n                  </button>\\r\\n                  <button style=\\\"margin:5% 5%\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"saveSelectedMoodName(mo.personalMood)\\\">Save mood?</button>\\r\\n                  <div *ngIf=\\\"selectedName != null\\\" style=\\\"margin-left:20px\\\">\\r\\n                    <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"Yes, this mood\\\" matTooltipPosition=\\\"below\\\">\\r\\n                      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" [routerLink]=\\\"['/personal-mood-add',  mo.personalMood]\\\" style=\\\"cursor:pointer\\\">thumb_up_alt</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button style=\\\"color:red\\\" matTooltip=\\\"Yes, but other mood\\\" matTooltipPosition=\\\"below\\\">\\r\\n                      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" [routerLink]=\\\"['/personal-mood-add']\\\" style=\\\"cursor:pointer\\\">thumb_down_alt</mat-icon>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-lg-7\\\">\\r\\n            <mat-card class=\\\"example-card\\\" *ngIf=\\\"foods && viewTable == true\\\">\\r\\n              <div *ngFor=\\\"let fd of foods\\\">\\r\\n                <div *ngIf=\\\"fd.moodID == selectedID\\\">\\r\\n                  <div *ngIf=\\\"fd.id == randomFoodID\\\">\\r\\n                    <div *ngIf=\\\"fd.foodForTheMood != null && fd.morning != null && fd.noon != null && fd.evening != null\\\">\\r\\n                      <mat-card-header>\\r\\n                        <div mat-card-avatar class=\\\"example-header-image\\\"><mat-icon color=\\\"accent\\\"> fastfood</mat-icon></div>\\r\\n                        <mat-card-title>{{ fd.foodForTheMood }}</mat-card-title>\\r\\n                      </mat-card-header>\\r\\n\\r\\n                      <mat-card-content>\\r\\n                        <mat-list>\\r\\n                          <mat-divider></mat-divider>\\r\\n                          <mat-list-item><b style=\\\"color:#69F0AE; margin-right:5px\\\">Morning: </b> {{ fd.morning }}</mat-list-item>\\r\\n                          <mat-divider></mat-divider>\\r\\n                          <mat-list-item> <b style=\\\"color:#69F0AE; margin-right:5px\\\">Noon: </b> {{ fd.noon }}</mat-list-item>\\r\\n                          <mat-divider></mat-divider>\\r\\n                          <mat-list-item><b style=\\\"color:#69F0AE; margin-right:5px\\\">Evening: </b> {{ fd.evening }}</mat-list-item>\\r\\n                          <mat-divider></mat-divider>\\r\\n                        </mat-list>\\r\\n                      </mat-card-content>\\r\\n\\r\\n                      <mat-card-actions>\\r\\n                        <div class=\\\"example-button-row row\\\">\\r\\n                          <div class=\\\"col-lg-10\\\">\\r\\n                            <p style=\\\"font-size:85%; padding:10px; color:#69F0AE\\\">\\r\\n                              Would you like to create your own full menu for this mood?\\r\\n                              <a style=\\\"color:red; font-size:110%\\\" [routerLink]=\\\"['/home-add-menu', fd.moodID ]\\\">Click here</a> !\\r\\n                            </p>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </mat-card-actions>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\";","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Food } from './home.model';\r\n\r\n@Component({\r\n  selector: 'app-menu-list',\r\n  styleUrls: ['../personal-mood/personal-mood.component.css'],\r\n  templateUrl: './menu-list.component.html',\r\n})\r\n\r\nexport class MenuListComponent {\r\n  public foods: Food[];\r\n  columnsToDisplay: string[] = ['foodForTheMood', 'morning', 'noon', 'evening'];\r\n\r\n  constructor(private http1: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n    this.loadPersonalMood();\r\n  }\r\n\r\n  public loadPersonalMood() {\r\n    this.http1.get<Food[]>(this.baseUrl + 'api/foods').subscribe(result => {\r\n      this.foods = result;\r\n    }, error => console.error(error)); \r\n  }\r\n\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PersonalMoodService } from '../personal-mood/personal-mood.service';\r\nimport { Quote } from './mood.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MoodService {\r\n\r\n  constructor(private http: HttpClient, private personalMoodService: PersonalMoodService, @Inject('BASE_URL') private baseUrl: string, private router: Router)\r\n  { }\r\n\r\n  public loadMood() {\r\n    return this.personalMoodService.loadMood();\r\n  }\r\n\r\n  public loadQuote() {\r\n    return this.http.get<Quote[]>(this.baseUrl + 'api/quotes');\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Statistics } from './statistics.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatisticsService {\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private router: Router)\r\n  { }\r\n\r\n  public loadStatistics() {\r\n    return this.http.get<Statistics[]>(this.baseUrl + 'api/statistics');\r\n  }\r\n\r\n  public saveAddStatistics(statistics: Statistics) {\r\n    return this.http.post(this.baseUrl + 'api/statistics', statistics);\r\n  }\r\n\r\n \r\n}\r\n","export default \"<footer class=\\\"navbar-light bg-white border-top box-shadow text-center text-lg-start\\\">\\r\\n\\r\\n  <!-- Grid container -->\\r\\n  <!--<div class=\\\"container p-4\\\">-->\\r\\n  <!-- Section: Images -->\\r\\n  <!--<section >\\r\\n      <div class=\\\"row\\\" >\\r\\n        <div class=\\\"col-lg-2 col-md-12 mb-4 mb-md-0\\\" *ngFor=\\\"let foodImage of foodImages\\\">\\r\\n          <div class=\\\"bg-image hover-overlay ripple shadow-1-strong rounded\\\" data-ripple-color=\\\"light\\\">\\r\\n            <img src=\\\"{{ foodImage.imageUrl }}\\\" class=\\\"w-75\\\" />\\r\\n            <a href=\\\"#!\\\">\\r\\n              <div class=\\\"mask\\\" style=\\\"background-color: rgba(251, 251, 251, 0.2);\\\">\\r\\n              </div>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>-->\\r\\n  <!-- Copyright -->\\r\\n\\r\\n  <div class=\\\"container pt-4\\\">\\r\\n    <section class=\\\"mb-4\\\">\\r\\n\\r\\n      <div *ngFor=\\\"let socialMedia of socialMedias\\\" class=\\\"btn\\\">\\r\\n        <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"{{ socialMedia.name }}\\\">\\r\\n          <i href=\\\"#\\\" class=\\\"{{ socialMedia.code }}\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\" text-center p-3\\\" style=\\\"background-color: rgb(221 211 211 / 0.17);\\\">\\r\\n    © 2021 Copyright:\\r\\n    <a class=\\\"text-dark\\\" href=\\\"#\\\">Made By FFA</a>\\r\\n  </div>\\r\\n</footer>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Statistics } from './statistics.model';\r\nimport { StatisticsService } from './statistics.service';\r\n\r\n@Component({\r\n  selector: 'app-statistics-add-component',\r\n  styleUrls: ['./statistics.component.css'],\r\n  templateUrl: './statistics-add.component.html'\r\n})\r\nexport class StatisticsAddComponent implements OnInit  {\r\n\r\n  isLinear = true;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n\r\n  hide = true;\r\n\r\n  public statistics: Statistics = <Statistics>{};\r\n\r\n\r\n  constructor(private _formBuilder: FormBuilder, private statisticsService: StatisticsService, private router: Router)\r\n  { }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n    this.thirdFormGroup = this._formBuilder.group({\r\n      thirdCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  public saveStatistics() {\r\n    this.statisticsService.saveAddStatistics(this.statistics).subscribe(result => {\r\n      this.router.navigateByUrl(\"/\");\r\n    }, error => console.error(error))\r\n  }\r\n \r\n}\r\n","export default \"\\r\\n<!--<div class=\\\"example-button-row\\\">\\r\\n  <button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/personal-mood-add']\\\">Add extra mood for today</button>\\r\\n</div>-->\\r\\n\\r\\n<table mat-table [dataSource]=\\\"foods\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <ng-container matColumnDef=\\\"foodForTheMood\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef style=\\\"width:25%\\\">What Need</th>\\r\\n    <td mat-cell *matCellDef=\\\"let food\\\"> {{ food.foodForTheMood }} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"morning\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef style=\\\"width:25%\\\">Morning</th>\\r\\n    <td mat-cell *matCellDef=\\\"let food\\\"> {{ food.morning }} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"noon\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef style=\\\"width:35%\\\">Noon</th>\\r\\n    <td mat-cell *matCellDef=\\\"let food\\\"> {{ food.noon }} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"evening\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef style=\\\"width:35%\\\">Evening</th>\\r\\n    <td mat-cell *matCellDef=\\\"let food\\\"> {{ food.evening }} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!--<ng-container matColumnDef=\\\"actions\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef style=\\\"width:15%\\\">Actions</th>\\r\\n    <td mat-cell *matCellDef=\\\"let personalMood\\\">\\r\\n      <section>\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n          <button mat-icon-button color=\\\"accent\\\" aria-label=\\\"Example icon button with a home icon\\\" matTooltip=\\\"Edit\\\">\\r\\n            <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" [routerLink]=\\\"['/personal-mood-edit',personalMood.id]\\\" style=\\\"cursor:pointer\\\">edit</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button color=\\\"accent\\\" aria-label=\\\"Example icon button with a home icon\\\" matTooltip=\\\"Info\\\">\\r\\n            <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" [routerLink]=\\\"['/personal-mood-read',personalMood.id]\\\" style=\\\"cursor:pointer\\\">info</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button color=\\\"accent\\\" aria-label=\\\"Example icon button with a home icon\\\" matTooltip=\\\"Delete\\\">\\r\\n            <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" (click)=\\\"deletePersonalMood(personalMood)\\\" style=\\\"cursor:pointer\\\">delete</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n      </section>\\r\\n    </td>\\r\\n  </ng-container>-->\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay \\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let myRowData; columns: columnsToDisplay ;\\\"></tr>\\r\\n</table>\\r\\n\";","import { variable } from '@angular/compiler/src/output/output_ast';\r\nimport { Component } from '@angular/core';\r\nimport { Mood, Quote } from './mood.model';\r\nimport { MoodService } from './mood.service';\r\n\r\n@Component({\r\n  selector: 'app-mood',\r\n  templateUrl: './mood.component.html'\r\n})\r\nexport class MoodComponent {\r\n  public moods: Mood[];\r\n  public quotes: Quote[];\r\n\r\n  public mood: Mood = <Mood>{};\r\n  public selectedMoodID: number;\r\n\r\n  public hasMapQuotes: Map<number, string> = new Map<number, string>();\r\n  public randomQuoteID: string;\r\n\r\n  public listOfQuotesID: string[];\r\n  public viewQuote: boolean = false;\r\n\r\n  public selectedMoodAtribute: string;\r\n\r\n  constructor(private moodService: MoodService) {\r\n    this.moodService.loadMood().subscribe(result => {\r\n      this.moods = result;\r\n    }, error => console.error(error));\r\n\r\n    this.moodService.loadQuote().subscribe(result => {\r\n      this.quotes = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public generateRandomQuote () {\r\n    this.listOfQuotesID = this.quotes.map((quote) => quote.quoteID);\r\n\r\n    for (let i = 0; i < this.listOfQuotesID.length; i++) {\r\n      this.hasMapQuotes.set(i, this.listOfQuotesID[i]);\r\n    }\r\n\r\n    let indexForMap = Math.floor((Math.random() * this.listOfQuotesID.length));\r\n    this.randomQuoteID = this.hasMapQuotes.get(indexForMap);\r\n    this.viewQuote = true;\r\n\r\n    return this.randomQuoteID;\r\n  }\r\n\r\n  public saveSelectedMoodID(selected) {\r\n    this.selectedMoodID = selected;\r\n\r\n    return this.selectedMoodID;\r\n  }\r\n\r\n  public showMoodDefinition(selected) {\r\n    this.saveSelectedMoodID(selected);\r\n    this.selectedMoodAtribute = \"definition\";\r\n    console.log(this.selectedMoodID, this.selectedMoodAtribute);\r\n    return this.selectedMoodAtribute;\r\n  }\r\n\r\n  public showMoodCuriosity(selected) {\r\n    this.saveSelectedMoodID(selected);\r\n    this.selectedMoodAtribute = \"curiosity\";\r\n    console.log(this.selectedMoodID, this.selectedMoodAtribute);\r\n    return this.selectedMoodAtribute;\r\n  }\r\n\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PersonalMoodService } from '../personal-mood/personal-mood.service';\r\nimport { Food } from './home.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomeService {\r\n\r\n  constructor(private http: HttpClient, private personalMoodService: PersonalMoodService, @Inject('BASE_URL') private baseUrl: string, private router: Router)\r\n  { }\r\n\r\n  public loadFood() {\r\n    return this.http.get<Food[]>(this.baseUrl + 'api/foods');\r\n  }\r\n\r\n  public loadMood() {\r\n    return this.personalMoodService.loadMood();\r\n  }\r\n\r\n  public loadPersonalMood() {\r\n    return this.personalMoodService.loadPersonalMood();\r\n  }\r\n\r\n  public saveAddInPersonalMenu(food: Food) {\r\n    return this.http.post(this.baseUrl + 'api/foods', food);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\r\n","export default \"body {\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nsection {\\r\\n  display: table;\\r\\n}\\r\\n\\r\\n.example-label {\\r\\n  display: table-cell;\\r\\n  font-size: 14px;\\r\\n  margin-left: 8px;\\r\\n  min-width: 120px;\\r\\n}\\r\\n\\r\\n.example-button-row .mat-button-base {\\r\\n  margin: 5px 5px 5px 0;\\r\\n}\\r\\n\\r\\n.example-flex-container {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.example-card {\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\n.example-header-image {\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n.example-button-container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  width: 100px;\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-button-row {\\r\\n  display: flex;\\r\\n /*justify-content: space-around;*/\\r\\n  width: auto;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.my-container-card {\\r\\n    display:flex;\\r\\n    justify-content:center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbmFsLW1vb2QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0NBQ2QsaUNBQWlDO0VBQ2hDLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtJQUNJLFlBQVk7SUFDWixzQkFBc0I7QUFDMUIiLCJmaWxlIjoicGVyc29uYWwtbW9vZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuc2VjdGlvbiB7XHJcbiAgZGlzcGxheTogdGFibGU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWxhYmVsIHtcclxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBtYXJnaW4tbGVmdDogOHB4O1xyXG4gIG1pbi13aWR0aDogMTIwcHg7XHJcbn1cclxuXHJcbi5leGFtcGxlLWJ1dHRvbi1yb3cgLm1hdC1idXR0b24tYmFzZSB7XHJcbiAgbWFyZ2luOiA1cHggNXB4IDVweCAwO1xyXG59XHJcblxyXG4uZXhhbXBsZS1mbGV4LWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG59XHJcblxyXG4uZXhhbXBsZS1jYXJkIHtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn1cclxuXHJcbi5leGFtcGxlLWJ1dHRvbi1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1mb3JtIHtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uZXhhbXBsZS1idXR0b24tcm93IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gLypqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsqL1xyXG4gIHdpZHRoOiBhdXRvO1xyXG59XHJcblxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcclxuICB3aWR0aDogNzUlO1xyXG59XHJcblxyXG4ubXktY29udGFpbmVyLWNhcmQge1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcclxufVxyXG4iXX0= */\";","export default \"<body>\\r\\n<!--  <div fxLayout=\\\"column\\\" fxFlexFill>\\r\\n-->    <app-nav-menu></app-nav-menu>\\r\\n    <div class=\\\"container\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n    <app-footer></app-footer>\\r\\n<!--  </div>\\r\\n--></body>\\r\\n\\r\\n\";","export default \"\\r\\n<div class=\\\"my-container-card\\\">\\r\\n  <mat-card class=\\\"example-card\\\" style=\\\"margin-bottom:20px\\\">\\r\\n    <div style=\\\"padding:7%\\\">\\r\\n      <mat-card-header style=\\\"margin-left:15%\\\">\\r\\n        <mat-card-title style=\\\"color: red; margin-bottom: 20%\\\">Create your menu</mat-card-title>\\r\\n      </mat-card-header>\\r\\n\\r\\n      <mat-card-content style=\\\"margin-left:15%\\\">\\r\\n        <!--<mat-form-field appearance=\\\"fill\\\" >\\r\\n          <mat-label>Mood ID</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"food.moodID\\\" [readonly]=\\\"true\\\"/>\\r\\n        </mat-form-field>-->\\r\\n\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>What you need ?</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"food.foodForTheMood\\\" placeholder=\\\"ex. You need something...\\\"/>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Morning</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"food.morning\\\" />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Noon</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"food.noon\\\" />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Evening</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"food.evening\\\" />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"example-button-row\\\" style=\\\"margin-top:10%\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"saveInPersonalMenu()\\\">Save menu</button>\\r\\n          <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"back home\\\">\\r\\n            <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" [routerLink]=\\\"['/']\\\" style=\\\"cursor:pointer\\\">home</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button color=\\\"accent\\\" matTooltip=\\\"see personal menu\\\">\\r\\n            <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\" [routerLink]=\\\"['/menu-list']\\\" style=\\\"cursor:pointer\\\">menu_book</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\";","export default \"<header>\\r\\n  <nav\\r\\n    class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\"\\r\\n  >\\r\\n    <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\"><img style=\\\"width:85px\\\" src=\\\"assets/logo.png\\\"></a>\\r\\n      <button\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\".navbar-collapse\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\"\\r\\n        (click)=\\\"toggle()\\\"\\r\\n      >\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <div\\r\\n        class=\\\"navbar-collapse collapse d-sm-inline-flex justify-content-end\\\"\\r\\n        [ngClass]=\\\"{ show: isExpanded }\\\"\\r\\n      >\\r\\n        <ul class=\\\"navbar-nav flex-grow\\\">\\r\\n          <li class=\\\"nav-item\\\"\\r\\n              [routerLinkActive]=\\\"['link-active']\\\"\\r\\n              [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/']\\\">Home</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/mood']\\\">Mood</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/personal-mood']\\\">Personal Mood</a>\\r\\n          </li>\\r\\n          <!--<li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n            <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/statistics']\\\">Statistics</a>\\r\\n          </li>-->\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { StatisticsComponent } from './statistics/statistics.component';\r\nimport { MoodComponent } from './mood/mood.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { PersonalMoodComponent } from './personal-mood/personal-mood.component';\r\nimport { PersonalMoodAddComponent } from './personal-mood/personal-mood-add.component';\r\nimport { PersonalMoodEditComponent } from './personal-mood/personal-mood-edit.component';\r\nimport { PersonalMoodReadComponent } from './personal-mood/personal-mood-read.component';\r\n\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\nimport { CarouselModule, WavesModule, ButtonsModule, CardsModule } from 'angular-bootstrap-md'\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { HomeAddMenuComponent } from './home/home-add-menu.component';\r\nimport { MenuListComponent } from './home/menu-list.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { StatisticsAddComponent } from './statistics/statistics-add.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    StatisticsComponent,\r\n    StatisticsAddComponent,\r\n    MoodComponent,\r\n\r\n    PersonalMoodComponent,\r\n    PersonalMoodAddComponent,\r\n    PersonalMoodEditComponent,\r\n    PersonalMoodReadComponent,\r\n\r\n    HomeAddMenuComponent,\r\n    MenuListComponent,\r\n    FooterComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n\r\n    CarouselModule, WavesModule, ButtonsModule, CardsModule,\r\n    MatStepperModule,\r\n    MatFormFieldModule,\r\n\r\n    FormsModule, ReactiveFormsModule,\r\n\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'statistics', component: StatisticsComponent },\r\n      { path: 'statistics-add', component: StatisticsAddComponent },\r\n\r\n      { path: 'mood', component: MoodComponent },\r\n\r\n      { path: 'personal-mood', component: PersonalMoodComponent },\r\n      { path: 'personal-mood-add', component: PersonalMoodAddComponent },\r\n      { path: 'personal-mood-edit/:id', component: PersonalMoodEditComponent },\r\n      { path: 'personal-mood-read/:id', component: PersonalMoodReadComponent },\r\n      { path: 'home-add-menu/:id', component: HomeAddMenuComponent },\r\n      { path: 'personal-mood-add/:id', component: PersonalMoodAddComponent },\r\n      { path: 'menu-list', component: MenuListComponent },\r\n      { path: 'footer', component: FooterComponent },\r\n\r\n    ]),\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\r\\n<div class=\\\"my-container-card\\\" style=\\\"padding-bottom:17px\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <div style=\\\"padding:7%\\\">\\r\\n      <mat-card-header style=\\\"margin-left:15%\\\">\\r\\n        <mat-card-title style=\\\"color: red; padding-bottom:20%\\\">Edit your mood</mat-card-title>\\r\\n      </mat-card-header>\\r\\n\\r\\n      <mat-card-content style=\\\"margin-left:15%\\\">\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Select your mood</mat-label>\\r\\n          <mat-select disableRipple [(value)]=\\\"personalMood.moodName\\\">\\r\\n            <mat-option *ngFor=\\\"let mood of moods\\\" [value]=\\\"mood.personalMood\\\">{{ mood.personalMood }}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Mood Reason</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"personalMood.moodReason\\\" />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"example-button-row;\\\" style=\\\"margin-top:10%\\\">\\r\\n          <button mat-raised-button  style=\\\"margin-right:3%\\\" color=\\\"accent\\\" (click)=\\\"saveEditedPersonalMood()\\\">Edit your mood</button>\\r\\n          <button mat-raised-button  color=\\\"accent\\\" [routerLink]=\\\"['/personal-mood']\\\">Back to list</button>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\";","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdi1tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBQ0E7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRjs7QUFFQTtFQUNFLDhDQUE4QztBQUNoRCIsImZpbGUiOiJuYXYtbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYS5uYXZiYXItYnJhbmQge1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxufVxyXG5cclxuaHRtbCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gIGh0bWwge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxufVxyXG5cclxuLmJveC1zaGFkb3cge1xyXG4gIGJveC1zaGFkb3c6IDAgLjI1cmVtIC43NXJlbSByZ2JhKDAsIDAsIDAsIC4wNSk7XHJcbn1cclxuIl19 */\";","import { Component } from '@angular/core';\r\nimport { FoodImage, SocialMedias } from './footer.model';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\n\r\nexport class FooterComponent {\r\n\r\n  public foodImages: FoodImage[] = [\r\n    { name: 'curry', imageUrl: 'https://assets.tmecosys.com/image/upload/t_web767x639/img/recipe/ras/Assets/486cf7bf-5b42-4eb2-a683-5739d34456b8/Derivates/8f787124-9d92-4846-b054-a8ad20716766.jpg' },\r\n    { name: 'lasagna', imageUrl: 'https://thumbor.unica.ro/unsafe/458x362/smart/filters:format(webp):contrast(8):quality(80)/https://retete.unica.ro/wp-content/uploads/2010/05/lasagna-cu-sos-de-roii-main.jpg' },\r\n    { name: 'chocolate cake', imageUrl: 'https://assets.tmecosys.com/image/upload/t_web767x639/img/recipe/vimdb/202685_0-803-5447-5447.jpg' },\r\n    { name: 'baked asparagus', imageUrl: 'https://foolproofliving.com/wp-content/uploads/2020/10/Baked-Asparagus-Recipe-Image.jpg' },\r\n    { name: 'linkedin', imageUrl: 'https://static.youmiam.com/images/recipe/1500x1000/sauce-pour-nachos-1715?placeholder=web_recipe&sig=89089c0a2eaac6ceef75d4e4e1e40fc30eabf803&v2' },\r\n    { name: 'edamame food', imageUrl: 'https://images.immediate.co.uk/production/volatile/sites/30/2020/08/red-cabbage-with-carrot-edamame-beans-d11286a.jpg?quality=90&resize=556,505' }\r\n  ];\r\n\r\n  public socialMedias: SocialMedias[] = [\r\n    { name: 'facebook', code: 'fa fa-facebook' },\r\n    { name: 'instagram', code: 'fa fa-instagram' },\r\n    { name: 'twitter', code: 'fa fa-twitter' },\r\n    { name: 'linkedin', code: 'fa fa-linkedin' },\r\n    { name: 'google', code: 'fa fa-google' },\r\n    { name: 'youtube', code: 'fa fa-youtube' },\r\n\r\n  ];\r\n\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","export default \"\\r\\n<div class=\\\"my-container-card\\\" style=\\\"padding-bottom:17px\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <div style=\\\"padding:7%\\\">\\r\\n      <mat-card-header style=\\\"margin-left:15%\\\">\\r\\n        <mat-card-title style=\\\"color: red; margin-bottom: 20%\\\">Select your mood</mat-card-title>\\r\\n      </mat-card-header>\\r\\n\\r\\n      <mat-card-content style=\\\"margin-left:15%\\\">\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Select your mood</mat-label>\\r\\n          <div *ngIf=\\\"moodName != null\\\">\\r\\n            <input matInput readonly [(ngModel)]=\\\"personalMood.moodName\\\" />\\r\\n          </div>\\r\\n          <div *ngIf=\\\"moodName == null\\\">\\r\\n            <mat-select disableRipple [(value)]=\\\"personalMood.moodName\\\">\\r\\n              <mat-option *ngFor=\\\"let mood of moods\\\" [value]=\\\"mood.personalMood\\\">{{ mood.personalMood }}</mat-option>\\r\\n            </mat-select>\\r\\n          </div>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Mood Reason</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"personalMood.moodReason\\\" />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"example-button-row\\\" style=\\\"margin-top:10%\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"savePersonalMood()\\\">Save your mood</button>\\r\\n          <button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/personal-mood']\\\">Back to list</button>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\";","import { Component} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Mood } from '../mood/mood.model';\r\nimport { PersonalMood } from './personal-mood.model';\r\nimport { PersonalMoodService } from './personal-mood.service';\r\n\r\n@Component({\r\n  selector: 'app-personal-mood-add',\r\n  styleUrls: ['./personal-mood.component.css'],\r\n  templateUrl: './personal-mood-add.component.html',\r\n})\r\n\r\nexport class PersonalMoodAddComponent {\r\n  public personalMood: PersonalMood = <PersonalMood>{};\r\n  public moods: Mood[];\r\n  public moodName: string;\r\n  public isReadOnly : true;\r\n\r\n  constructor(private personalMoodService: PersonalMoodService, private router: Router, private activateRouter: ActivatedRoute)\r\n  {\r\n    this.personalMoodService.loadMood().subscribe(result => {\r\n      this.moods = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activateRouter.params.subscribe(param => {\r\n      this.moodName = param.id;\r\n      this.personalMood.moodName = this.moodName;\r\n    });\r\n  }\r\n\r\n  public savePersonalMood() {\r\n    this.personalMoodService.saveAddPersonalMood(this.personalMood).subscribe(result => {\r\n      this.router.navigateByUrl(\"/personal-mood\");\r\n    }, error => console.error(error))\r\n  }\r\n\r\n}\r\n","export default \"<!--class=\\\"d-flex justify-content-between\\\"-->\\r\\n\\r\\n\\r\\n<div style=\\\"margin-bottom:50px; margin-top:35px\\\">\\r\\n  <!--<button mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\r\\n    {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\r\\n  </button>-->\\r\\n  <div class=\\\"d-flex justify-content-center\\\">\\r\\n    <mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper style=\\\"padding:5%\\\">\\r\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n          <ng-template matStepLabel>Fill out some information about you</ng-template>\\r\\n          <div>\\r\\n            <mat-form-field>\\r\\n              <mat-label>Your First Name</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"statistics.userFirstName\\\" placeholder=\\\"First name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field style=\\\"margin-left:10px\\\">\\r\\n              <mat-label>Your Last Name</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"statistics.userLastName\\\" placeholder=\\\"Last name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field style=\\\"margin-left:10px\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-label>Your Age</mat-label>\\r\\n                <input matInput [type]=\\\"hide ? 'number' : 'number'\\\" [(ngModel)]=\\\"statistics.userAge\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n                <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\r\\n                  <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                </button>\\r\\n              </mat-form-field>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <button mat-raised-button matStepperNext color=\\\"accent\\\">Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </mat-step>\\r\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n          <ng-template matStepLabel>Raiting section</ng-template>\\r\\n          <mat-form-field>\\r\\n            <mat-label>Rating</mat-label>\\r\\n            <mat-select disableRipple [(value)]=\\\"statistics.rating\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n              <mat-option [value]=\\\"1\\\">1</mat-option>\\r\\n              <mat-option [value]=\\\"2\\\">2</mat-option>\\r\\n              <mat-option [value]=\\\"3\\\">3</mat-option>\\r\\n              <mat-option [value]=\\\"4\\\">4</mat-option>\\r\\n              <mat-option [value]=\\\"5\\\">5</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <div>\\r\\n            <button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\r\\n            <button mat-raised-button matStepperNext color=\\\"accent\\\" style=\\\"margin-left:10px\\\">Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n\\r\\n      <mat-step [stepControl]=\\\"thirdFormGroup\\\">\\r\\n        <form [formGroup]=\\\"thirdFormGroup\\\">\\r\\n          <ng-template matStepLabel>Like & Dislike</ng-template>\\r\\n          <mat-form-field>\\r\\n            <mat-label>Like</mat-label>\\r\\n            <textarea matInput [(ngModel)]=\\\"statistics.whatLike\\\" formControlName=\\\"thirdCtrl\\\" placeholder=\\\"I liked ...\\\" required></textarea>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field style=\\\"margin-left:10px\\\">\\r\\n            <mat-label>Dislike</mat-label>\\r\\n            <textarea matInput [(ngModel)]=\\\"statistics.whatDoNotLike\\\" formControlName=\\\"thirdCtrl\\\" placeholder=\\\"I didn't like ...\\\" required></textarea>\\r\\n          </mat-form-field>\\r\\n          <div>\\r\\n            <button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\r\\n            <button mat-raised-button matStepperNext color=\\\"accent\\\" style=\\\"margin-left:10px\\\">Next</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n\\r\\n      <mat-step>\\r\\n        <ng-template matStepLabel>Done</ng-template>\\r\\n        <div>\\r\\n          <button mat-raised-button matStepperPrevious color=\\\"accent\\\">Previous</button>\\r\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"saveStatistics()\\\" style=\\\"margin-left:10px\\\">Save</button>\\r\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"stepper.reset()\\\" style=\\\"margin-left:10px\\\">Reset</button>\\r\\n        </div>\\r\\n      </mat-step>\\r\\n    </mat-vertical-stepper>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--\\r\\n\\r\\n<div class=\\\"my-container-card\\\" style=\\\"padding-bottom:17px\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <div style=\\\"padding:7%\\\">\\r\\n      <mat-card-header style=\\\"margin-left:15%\\\">\\r\\n        <mat-card-title style=\\\"color: red; margin-bottom: 20%\\\">Form for Statistics</mat-card-title>\\r\\n      </mat-card-header>\\r\\n\\r\\n      <mat-card-content style=\\\"margin-left:15%\\\">\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Your First Name</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"statistics.userFirstName\\\" />\\r\\n        </mat-form-field>\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Your First Last</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"statistics.userLastName\\\" />\\r\\n        </mat-form-field>\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Rating</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"statistics.rating\\\" />\\r\\n        </mat-form-field>\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>What you loved the most ?</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"statistics.whatLike\\\" />\\r\\n        </mat-form-field>\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>What you liked the least ?</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"statistics.whatDoNotLike\\\" />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"example-button-row\\\" style=\\\"margin-top:10%\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"saveStatistics()\\\">Save</button>\\r\\n          <button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/home']\\\">Cancel</button>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>-->\\r\\n<!--<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\\r\\n\\r\\n<mdb-card cascade=\\\"true\\\" wider=\\\"true\\\" reverse=\\\"true\\\" class=\\\"my-4\\\">-->\\r\\n<!--Card image-->\\r\\n<!--<div class=\\\"view view-cascade overlay waves-light\\\" mdbWavesEffect>\\r\\n  <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\\\"></mdb-card-img>\\r\\n  <a>\\r\\n    <div class=\\\"mask rgba-white-slight\\\"></div>\\r\\n  </a>\\r\\n</div>-->\\r\\n<!--/Card image-->\\r\\n<!-- Card content -->\\r\\n<!--<mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">-->\\r\\n<!--Title-->\\r\\n<!--<mdb-card-title>\\r\\n  <h4>\\r\\n    <strong>My adventure</strong>\\r\\n  </h4>\\r\\n</mdb-card-title>\\r\\n\\r\\n<h5 class=\\\"indigo-text\\\">\\r\\n  <strong>Photography</strong>\\r\\n</h5>\\r\\n\\r\\n<mdb-card-text>\\r\\n  Sed ut perspiciatis unde omnis iste natus sit voluptatem accusantium doloremque laudantium, totam rem\\r\\n  aperiam.\\r\\n</mdb-card-text>-->\\r\\n<!--Linkedin-->\\r\\n<!--<a class=\\\"px-2 icons-sm li-ic\\\">\\r\\n  <mdb-icon fab icon=\\\"linkedin-in\\\"> </mdb-icon>\\r\\n</a>-->\\r\\n<!--Twitter-->\\r\\n<!--<a class=\\\"px-2 icons-sm tw-ic\\\">\\r\\n  <mdb-icon fab icon=\\\"twitter\\\"> </mdb-icon>\\r\\n</a>-->\\r\\n<!--Dribbble-->\\r\\n<!--<a class=\\\"px-2 icons-sm fb-ic\\\">\\r\\n      <mdb-icon fab icon=\\\"facebook-f\\\"> </mdb-icon>\\r\\n    </a>\\r\\n  </mdb-card-body>\\r\\n\\r\\n</mdb-card>-->\\r\\n\";","import { Component} from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { Food } from './home.model';\r\nimport { HomeService } from './home.service';\r\n\r\n@Component({\r\n  selector: 'app-home-add-menu',\r\n  styleUrls: ['../personal-mood/personal-mood.component.css'],\r\n  templateUrl: './home-add-menu.component.html',\r\n})\r\n\r\nexport class HomeAddMenuComponent {\r\n  public food: Food = <Food>{};\r\n  public foods: Food[];\r\n\r\n  public moodID: number; \r\n\r\n  constructor(private homeService: HomeService, private activateRouter: ActivatedRoute, private router: Router)\r\n  { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activateRouter.params.subscribe(param => {\r\n      this.moodID = param.id;\r\n      this.food.moodID = this.moodID;\r\n    });\r\n  }\r\n\r\n  public saveInPersonalMenu() {\r\n    this.homeService.saveAddInPersonalMenu(this.food).subscribe(result => {\r\n      return this.router.navigateByUrl(\"/menu-list\");\r\n    }, error => console.error(error))\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n<div class=\\\"d-flex justify-content-around\\\">\\r\\n\\r\\n  <div>\\r\\n    <mdb-carousel class=\\\"carousel slide carousel-fade\\\" [animation]=\\\"'fade'\\\">\\r\\n      <mdb-carousel-item >\\r\\n        <div style=\\\"width:290px; height:290px\\\">\\r\\n          <img class=\\\"d-block w-100\\\" src=\\\"assets/bg-for-mood.png\\\" style=\\\"opacity:90%\\\">\\r\\n          <div class=\\\"mask rgba-black-light waves-light\\\" mdbWavesEffect></div>\\r\\n        </div>\\r\\n        <div class=\\\"carousel-caption\\\" style=\\\"height:57%; text-align:left\\\">\\r\\n          <div class=\\\"example-button-row\\\" style=\\\"margin-left:17%; margin-bottom:10%\\\">\\r\\n            <button mat-raised-button color=\\\"warm\\\" (click)=\\\"generateRandomQuote()\\\">Random quote</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mdb-carousel-item>\\r\\n    </mdb-carousel>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"viewQuote == true\\\" style=\\\"margin-top:5%\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <div *ngFor=\\\"let quote of quotes\\\">\\r\\n        <div *ngIf=\\\"quote.quoteID == randomQuoteID\\\">\\r\\n          <mat-card-title class=\\\"d-flex justify-content-around\\\">Daily quote</mat-card-title>\\r\\n          <mat-card-content>\\r\\n            <mat-list>\\r\\n              <mat-list-item class=\\\"d-flex justify-content-around\\\" style=\\\"margin-left: 3%\\\">\\r\\n                <i style=\\\"margin-right:5px; margin-right: 5%; margin-top:5%; margin-bottom:5%\\\">{{ quote.quoteText }}</i>\\r\\n              </mat-list-item>\\r\\n              <mat-list-item class=\\\"d-flex justify-content-end\\\">\\r\\n                <p style=\\\"color:#69F0AE; margin-right:5px\\\">-> By {{ quote.writer }}</p> \\r\\n              </mat-list-item>\\r\\n            </mat-list>\\r\\n          </mat-card-content>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div style=\\\"padding-top:55px;padding-bottom:50px\\\">\\r\\n  <div class=\\\"d-flex justify-content-center\\\">\\r\\n    <h1 style=\\\"font-size:3em\\\">Lear more about your mood</h1>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex justify-content-center\\\" style=\\\"padding-top:30px\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <div>\\r\\n        <mat-form-field appearance=\\\"fill\\\" color=\\\"accent\\\">\\r\\n          <mat-label>Choose the mood</mat-label>\\r\\n          <mat-select disableRipple [(value)]=\\\"mood.id\\\">\\r\\n            <mat-option *ngFor=\\\"let mood of moods\\\" [value]=\\\"mood.id\\\">{{ mood.personalMood }}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"d-flex justify-content-around\\\">\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"showMoodDefinition(mood.id)\\\">Definition</button>\\r\\n        </div>\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n          <button mat-raised-button color=\\\"accent\\\" (click)=\\\"showMoodCuriosity(mood.id)\\\">Curiosity</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\\r\\n<div *ngFor=\\\"let mo of moods\\\"  style=\\\"margin-bottom: 50px\\\">\\r\\n  <mat-card class=\\\"example-card\\\" style=\\\"background-color:#69F0AE;\\\" *ngIf=\\\"mo.id == selectedMoodID\\\">\\r\\n      <mat-card class=\\\"example-card\\\" >\\r\\n        <div >\\r\\n          <div *ngIf=\\\"selectedMoodAtribute == 'definition'\\\" class=\\\"d-flex justify-content-around\\\">\\r\\n            Definition for {{ mo.personalMood }} mood is: <i>{{ mo.moodDescription }}</i> \\r\\n          </div>\\r\\n          <div *ngIf=\\\"selectedMoodAtribute == 'curiosity'\\\" class=\\\"d-flex justify-content-around\\\">\\r\\n            Did you know that: <i>{{ mo.curiosity }}</i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-card>\\r\\n</mat-card>\\r\\n</div>\\r\\n\";","import { Component} from '@angular/core';\r\nimport { Mood } from '../mood/mood.model';\r\nimport { PersonalMood } from './personal-mood.model';\r\nimport { PersonalMoodService } from './personal-mood.service';\r\n\r\n@Component({\r\n  selector: 'app-personal-mood',\r\n  styleUrls: ['./personal-mood.component.css'],\r\n  templateUrl: './personal-mood.component.html',\r\n})\r\n\r\nexport class PersonalMoodComponent {\r\n  public personalMoods: PersonalMood[];\r\n  public moods: Mood[];\r\n  columnsToDisplay: string[] = ['moodName', 'currentDate', 'moodReason', 'actions'];\r\n\r\n  constructor(private personalMoodService: PersonalMoodService) {\r\n    this.loads();\r\n  }\r\n\r\n  public loads() {\r\n    this.personalMoodService.loadPersonalMood().subscribe(result => {\r\n      this.personalMoods = result;\r\n    }, error => console.error(error));\r\n\r\n    this.personalMoodService.loadMood().subscribe(result => {\r\n      this.moods = result;\r\n    }, error => console.error(error)); \r\n  }\r\n\r\n  public deletePersonalMood(personalMood: PersonalMood)\r\n  {\r\n    this.personalMoodService.deletePersonalMood(personalMood).subscribe(result => {\r\n      this.loads();\r\n    }, error => console.error(error));\r\n  }\r\n\r\n}\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Mood } from '../mood/mood.model';\r\nimport { PersonalMood } from './personal-mood.model';\r\nimport { PersonalMoodService } from './personal-mood.service';\r\n\r\n@Component({\r\n  selector: 'app-personal-mood-edit',\r\n  styleUrls: ['./personal-mood.component.css'],\r\n  templateUrl: './personal-mood-edit.component.html',\r\n})\r\n\r\nexport class PersonalMoodEditComponent {\r\n  public id: string;\r\n  public personalMood: PersonalMood = <PersonalMood>{};\r\n  public moods: Mood[];\r\n\r\n  constructor(\r\n    private personalMoodService: PersonalMoodService, private router: Router, private activateRouter: ActivatedRoute)\r\n  {\r\n    this.personalMoodService.loadMood().subscribe(result => {\r\n      this.moods = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activateRouter.params.subscribe(param => {\r\n      this.id = param.id;\r\n      this.loadPersonalMood();\r\n    });\r\n  }\r\n\r\n  public loadPersonalMood() {\r\n    this.personalMoodService.loadPersonalMoodByID(this.id).subscribe(result => {\r\n      this.personalMood = result;\r\n    }, error => console.error(error))\r\n  }\r\n\r\n  public saveEditedPersonalMood() {\r\n    this.personalMoodService.saveEditedPersonalMood(this.id, this.personalMood).subscribe(result => {\r\n      this.router.navigateByUrl(\"/personal-mood\");\r\n    }, error => console.error(error))\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n<div *ngFor=\\\"let st of statistics\\\">{{ st.usedMoodNumber }}, {{ st.numberOfPersonalMenus }}, {{ st.quotesClasifications }}</div>\\r\\n\\r\\n<!--<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\\r\\n\\r\\n<mdb-card cascade=\\\"true\\\" wider=\\\"true\\\" reverse=\\\"true\\\" class=\\\"my-4\\\">-->\\r\\n  <!--Card image-->\\r\\n  <!--<div class=\\\"view view-cascade overlay waves-light\\\" mdbWavesEffect>\\r\\n    <mdb-card-img src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\\\"></mdb-card-img>\\r\\n    <a>\\r\\n      <div class=\\\"mask rgba-white-slight\\\"></div>\\r\\n    </a>\\r\\n  </div>-->\\r\\n  <!--/Card image-->\\r\\n  <!-- Card content -->\\r\\n  <!--<mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">-->\\r\\n\\r\\n    <!--Title-->\\r\\n    <!--<mdb-card-title>\\r\\n      <h4>\\r\\n        <strong>My adventure</strong>\\r\\n      </h4>\\r\\n    </mdb-card-title>\\r\\n\\r\\n    <h5 class=\\\"indigo-text\\\">\\r\\n      <strong>Photography</strong>\\r\\n    </h5>\\r\\n\\r\\n    <mdb-card-text>\\r\\n      Sed ut perspiciatis unde omnis iste natus sit voluptatem accusantium doloremque laudantium, totam rem\\r\\n      aperiam.\\r\\n    </mdb-card-text>-->\\r\\n\\r\\n    <!--Linkedin-->\\r\\n    <!--<a class=\\\"px-2 icons-sm li-ic\\\">\\r\\n      <mdb-icon fab icon=\\\"linkedin-in\\\"> </mdb-icon>\\r\\n    </a>-->\\r\\n    <!--Twitter-->\\r\\n    <!--<a class=\\\"px-2 icons-sm tw-ic\\\">\\r\\n      <mdb-icon fab icon=\\\"twitter\\\"> </mdb-icon>\\r\\n    </a>-->\\r\\n    <!--Dribbble-->\\r\\n    <!--<a class=\\\"px-2 icons-sm fb-ic\\\">\\r\\n      <mdb-icon fab icon=\\\"facebook-f\\\"> </mdb-icon>\\r\\n    </a>\\r\\n  </mdb-card-body>\\r\\n\\r\\n</mdb-card>-->\\r\\n\";","import { Component} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PersonalMood } from './personal-mood.model';\r\nimport { PersonalMoodService } from './personal-mood.service';\r\n\r\n@Component({\r\n  selector: 'app-personal-mood-read',\r\n  styleUrls: ['./personal-mood.component.css'],\r\n  templateUrl: './personal-mood-read.component.html',\r\n})\r\n\r\nexport class PersonalMoodReadComponent {\r\n  public id: string;\r\n  public personalMood: PersonalMood = <PersonalMood>{};\r\n\r\n  constructor(\r\n    private personalMoodService: PersonalMoodService,\r\n    private router: Router,\r\n    private activateRouter: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activateRouter.params.subscribe(param => {\r\n      this.id = param.id;\r\n      this.loadSong();\r\n    });\r\n  }\r\n\r\n  public loadSong() {\r\n    this.personalMoodService.loadPersonalMoodByID(this.id).subscribe(result => {\r\n      this.personalMood = result;\r\n    }, error => console.error(error))\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}